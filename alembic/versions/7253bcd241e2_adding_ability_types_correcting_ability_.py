"""Adding ability 'Types', correcting ability relation (1 to n categorys)

Revision ID: 7253bcd241e2
Revises: 35e3526e74ce
Create Date: 2025-03-13 23:57:51.628885

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '7253bcd241e2'
down_revision: Union[str, None] = '35e3526e74ce'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('abilitytype',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('fotoPngUrl', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )

    op.add_column('ability', sa.Column('FK_type', sa.Integer(), nullable=True))
    op.drop_constraint('ability_FK_category_2_fkey', 'ability', type_='foreignkey')
    op.create_foreign_key(None, 'ability', 'abilitytype', ['FK_type'], ['id'])
    op.drop_column('ability', 'FK_category_2')
    op.alter_column('ability', "FK_category_1", new_column_name="FK_category") #Rename
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('abilitytype')
    
    op.add_column('ability', sa.Column('FK_category_2', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'ability', type_='foreignkey')
    op.create_foreign_key('ability_FK_category_2_fkey', 'ability', 'abilitycategory', ['FK_category_2'], ['id'])
    op.drop_column('ability', 'FK_type')
    op.alter_column('ability', "FK_category", new_column_name="FK_category_1") #Rename back
    # ### end Alembic commands ###
